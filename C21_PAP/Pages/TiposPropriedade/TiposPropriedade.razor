@page "/tipos-propriedade"
@using C21_PAP.Models.TiposPropriedades
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using C21_PAP.Models
@inject HttpClient Http
@inject IDialogService DialogService
@layout MainLayout

<PageTitle>Tipos de Propriedade</PageTitle> 


<MudButton Class="mb-2" Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(CreateDialog)">Criar Tipo de Propriedade</MudButton>
<MudTable @ref="table" ServerData="@(new Func<TableState, Task<TableData<TipoPropriedadeModel>>>(ServerReload))" Hover="true" Bordered="true" Dense="true" LoadingProgressColor="Color.Default" Breakpoint="Breakpoint.None" HorizontalScrollbar="true">
    <HeaderContent>
        <MudTh Style="text-align:start">Id</MudTh>
        <MudTh Style="text-align:center">Tipo de Propriedade</MudTh>
        <MudTh Style="text-align:center">Ativo</MudTh>
        <MudTh Style="text-align:end"></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context._Id</MudTd>
        <MudTd DataLabel="Tipo de Propriedade">@context.Name</MudTd>
        <MudTd DataLabel="Ativo"><MudCheckBox Disabled="true" Checked="@context.Active" Color="Color.Secondary"></MudCheckBox></MudTd>
        <MudTd DataLabel=""><MudIconButton Icon="@Icons.Filled.Edit" OnClick="@(() => EditDialog(context))"></MudIconButton></MudTd>
    </RowTemplate>
</MudTable>


@code {
    
    private MudTable<TipoPropriedadeModel> table;

    protected override async Task OnInitializedAsync()
    {
            await GetDataAsync();
            await base.OnInitializedAsync();
    }
    
    async void CreateDialog()
    {
        var dialog = DialogService.Show<Create>("Adicionar Tipo Propriedade", new DialogOptions(){ CloseButton = true, FullWidth = true});
        var result = await dialog.Result;
        if (!result.Cancelled)
        {
            await table.ReloadServerData();
        }
    }

    async void EditDialog(TipoPropriedadeModel model)
    {
        Console.WriteLine(model.Name);
        var parameters = new DialogParameters(){ ["PropertyTypeModel"]=model };;
        var dialog = DialogService.Show<Edit>("Editar Tipo Propriedade", parameters, new DialogOptions(){ CloseButton = true, FullWidth = true});
        var result = await dialog.Result;
        if (!result.Cancelled)
        {
            await table.ReloadServerData();
        }
    }
    
    private async Task<TableData<TipoPropriedadeModel>> ServerReload(TableState state)
    {
        var elements = await GetDataAsync();
        return new TableData<TipoPropriedadeModel>() {TotalItems = elements.Count(), Items = elements};
    }

    private async Task<IEnumerable<TipoPropriedadeModel>?> GetDataAsync()
    {
        try
        {
            var res = await Http.GetFromJsonAsync<Response<TipoPropriedadeModel>>("api/tipos-propriedade");
            return res.Documents;
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
            return null;
        }
    }
}